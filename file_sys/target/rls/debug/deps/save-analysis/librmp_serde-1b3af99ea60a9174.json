{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3","program":"C:\\Users\\Beni\\.rustup\\toolchains\\stable-i686-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","rmp_serde","C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1b3af99ea60a9174","-C","extra-filename=-1b3af99ea60a9174","--out-dir","c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps\\libbyteorder-e21f072e0cddaeca.rmeta","--extern","rmp=c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps\\librmp-7b49b9289be8c759.rmeta","--extern","serde=c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps\\libserde-f404c51351fc7496.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Beni\\.rustup/toolchains/stable-i686-pc-windows-msvc"],"output":"c:\\Users\\Beni\\Documents\\work\\File_Sys\\file_sys\\target\\rls\\debug\\deps\\librmp_serde-1b3af99ea60a9174.rmeta"},"prelude":{"crate_id":{"name":"rmp_serde","disambiguator":[12085884268604932201,9058575448028085698]},"crate_root":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src","external_crates":[{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[17547299525433066937,6462703543472652821]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6764811272097449003,13681722573116367099]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9485826678459717252,15756974541460141494]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15954912595519161470,12922162993496933985]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5824572747488578400,18164785604033351576]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[10331641369357162511,17836984904787579268]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8495357030570666042,9830701870303456689]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9657771536831955996,2892192969278695320]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12375917788909833983,1997691704544372736]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16952125311933509182,18402636855086965869]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[10744862195025581238,6478452609884575256]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8143783028888645125,5443838079021418384]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2060411395260400816,11913745625441100273]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":14,"id":{"name":"serde","disambiguator":[11005385228856013039,16746543922172662096]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","num":15,"id":{"name":"serde_derive","disambiguator":[16547340264562379589,4220076204272863592]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","num":16,"id":{"name":"rmp","disambiguator":[9628337183347238845,14193820122897808337]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","num":17,"id":{"name":"byteorder","disambiguator":[16769616254768112529,1943257969801433858]}},{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","num":18,"id":{"name":"num_traits","disambiguator":[18222392677112592399,10899264792939210449]}}],"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":0,"byte_end":9322,"line_start":1,"line_end":355,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":1969,"byte_end":1981,"line_start":71,"line_end":71,"column_start":25,"column_end":37},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":1983,"byte_end":1992,"line_start":71,"line_end":71,"column_start":39,"column_end":48},"alias_span":null,"name":"from_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":1994,"byte_end":2007,"line_start":71,"line_end":71,"column_start":50,"column_end":63},"alias_span":null,"name":"from_read_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2009,"byte_end":2019,"line_start":71,"line_end":71,"column_start":65,"column_end":75},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2046,"byte_end":2056,"line_start":72,"line_end":72,"column_start":25,"column_end":35},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2058,"byte_end":2064,"line_start":72,"line_end":72,"column_start":37,"column_end":43},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2066,"byte_end":2078,"line_start":72,"line_end":72,"column_start":45,"column_end":57},"alias_span":null,"name":"to_vec_named","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":0,"byte_end":9322,"line_start":1,"line_end":355,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":125},{"krate":0,"index":363},{"krate":0,"index":669},{"krate":0,"index":1099},{"krate":0,"index":1107},{"krate":0,"index":1105},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":670},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":697},{"krate":0,"index":1109},{"krate":0,"index":1123},{"krate":0,"index":1121},{"krate":0,"index":1118},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":701},{"krate":0,"index":710},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":724}],"decl_id":null,"docs":" This crate connects Rust MessagePack library with [`serde`][serde] providing an ability to\n easily serialize and deserialize both Rust built-in types, the standard library and custom data\n structures.","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs)","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":1713,"byte_end":1766,"line_start":59,"line_end":59,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":728},{"krate":0,"index":734},{"krate":0,"index":732},{"krate":0,"index":730},{"krate":0,"index":54},{"krate":0,"index":735},{"krate":0,"index":745},{"krate":0,"index":742},{"krate":0,"index":739},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":747},{"krate":0,"index":757},{"krate":0,"index":754},{"krate":0,"index":751},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":759},{"krate":0,"index":769},{"krate":0,"index":766},{"krate":0,"index":763},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":771},{"krate":0,"index":781},{"krate":0,"index":778},{"krate":0,"index":775},{"krate":0,"index":110},{"krate":0,"index":113}],"decl_id":null,"docs":" Change MessagePack behavior with configuration wrappers.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":9730,"byte_end":9746,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"SerializerConfig","qualname":"::config::SerializerConfig","value":"SerializerConfig: sealed::SerializerConfig","parent":null,"children":[],"decl_id":null,"docs":" Represents configuration that dicatates what the serializer does.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":10219,"byte_end":10235,"line_start":24,"line_end":24,"column_start":15,"column_end":31},"name":"SerializerConfig","qualname":"::config::sealed::SerializerConfig","value":"SerializerConfig","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51}],"decl_id":null,"docs":" This is the inner trait - the real SerializerConfig.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":10249,"byte_end":10265,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"write_struct_len","qualname":"::config::sealed::SerializerConfig::write_struct_len","value":"fn <S> (ser: &mut S, len: usize) -> Result<(), Error>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":10440,"byte_end":10458,"line_start":30,"line_end":30,"column_start":12,"column_end":30},"name":"write_struct_field","qualname":"::config::sealed::SerializerConfig::write_struct_field","value":"fn <S, T> (ser: &mut S, key: &'static str, value: &T) -> Result<(), Error>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":10851,"byte_end":10870,"line_start":39,"line_end":39,"column_start":12,"column_end":31},"name":"write_variant_ident","qualname":"::config::sealed::SerializerConfig::write_variant_ident","value":"fn <S> (ser: &mut S, variant_index: u32, variant: &'static str) -> Result<(), Error>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Encodes an enum variant ident (id or name) according to underlying writer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":11340,"byte_end":11353,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"DefaultConfig","qualname":"::config::DefaultConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default serializer configuration.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12685,"byte_end":12700,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"StructMapConfig","qualname":"::config::StructMapConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper, that overrides struct serialization by packing as a map with field names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12858,"byte_end":12861,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<StructMapConfig<C>>::new","value":"fn (inner: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StructMapConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14054,"byte_end":14071,"line_start":147,"line_end":147,"column_start":12,"column_end":29},"name":"StructTupleConfig","qualname":"::config::StructTupleConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper that overrides struct serlization by packing as a tuple without field\n names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14233,"byte_end":14236,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<StructTupleConfig<C>>::new","value":"fn (inner: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StructTupleConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15545,"byte_end":15564,"line_start":197,"line_end":197,"column_start":12,"column_end":31},"name":"VariantStringConfig","qualname":"::config::VariantStringConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper, that overrides enum serialization by serializing enum variant names as strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15730,"byte_end":15733,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"new","qualname":"<VariantStringConfig<C>>::new","value":"fn (inner: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `VariantStringConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":16852,"byte_end":16872,"line_start":242,"line_end":242,"column_start":12,"column_end":32},"name":"VariantIntegerConfig","qualname":"::config::VariantIntegerConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper that overrides enum variant serialization by packing enum names as their integer indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":17040,"byte_end":17043,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"new","qualname":"<VariantIntegerConfig<C>>::new","value":"fn (inner: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `VariantIntegerConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":783},{"krate":0,"index":809},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":811},{"krate":0,"index":816},{"krate":0,"index":177},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":819},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":834},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":226},{"krate":0,"index":233},{"krate":0,"index":240},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":311},{"krate":0,"index":994},{"krate":0,"index":1023},{"krate":0,"index":1019},{"krate":0,"index":1014},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":323},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":1035},{"krate":0,"index":1040},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359}],"decl_id":null,"docs":" Generic MessagePack deserialization.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":18696,"byte_end":18713,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::Error::InvalidMarkerRead","value":"Error::InvalidMarkerRead(io::Error)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" The enclosed I/O error occurred while trying to read a MessagePack\n marker.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":18829,"byte_end":18844,"line_start":27,"line_end":27,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::Error::InvalidDataRead","value":"Error::InvalidDataRead(io::Error)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" The enclosed I/O error occurred while trying to read the encoded\n MessagePack data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":18935,"byte_end":18947,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::Error::TypeMismatch","value":"Error::TypeMismatch(Marker)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" A mismatch occurred between the decoded and expected value types.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19021,"byte_end":19031,"line_start":31,"line_end":31,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::decode::Error::OutOfRange","value":"Error::OutOfRange","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" A numeric cast failed due to an out-of-range error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19104,"byte_end":19118,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"name":"LengthMismatch","qualname":"::decode::Error::LengthMismatch","value":"Error::LengthMismatch(u32)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" A decoded array did not have the enclosed expected length.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19227,"byte_end":19240,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"Uncategorized","qualname":"::decode::Error::Uncategorized","value":"Error::Uncategorized(String)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" An otherwise uncategorized error occurred. See the enclosed `String` for\n details.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19373,"byte_end":19379,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::decode::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" A general error occurred while deserializing the expected type. See the\n enclosed `String` for details.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19449,"byte_end":19458,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::decode::Error::Utf8Error","value":"Error::Utf8Error(Utf8Error)","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" An encoded string could not be parsed as UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19533,"byte_end":19551,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"DepthLimitExceeded","qualname":"::decode::Error::DepthLimitExceeded","value":"Error::DepthLimitExceeded","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" The depth limit was exceeded; not currently used.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":18593,"byte_end":18598,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"Error::{InvalidMarkerRead, InvalidDataRead, TypeMismatch, OutOfRange, LengthMismatch, Uncategorized, Syntax, Utf8Error, DepthLimitExceeded}","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807}],"decl_id":null,"docs":" Enum representing errors that can occur while decoding MessagePack data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23332,"byte_end":23344,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::decode::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"decl_id":null,"docs":" A Deserializer that reads bytes from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23542,"byte_end":23551,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"from_read","qualname":"<Deserializer<ReadReader<R>>>::from_read","value":"fn (rd: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use `Deserializer::new` instead\")","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23477,"byte_end":23530,"line_start":156,"line_end":156,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23680,"byte_end":23683,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer<ReadReader<R>>>::new","value":"fn (rd: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Deserializer` by consuming the given reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23970,"byte_end":23977,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Deserializer<ReadReader<R>>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24106,"byte_end":24113,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Deserializer<ReadReader<R>>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader in this decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24247,"byte_end":24257,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Deserializer<ReadReader<R>>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this deserializer returning the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24459,"byte_end":24467,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"position","qualname":"<Deserializer<ReadReader<Cursor<R>>>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this deserializer, i.e. how many bytes were read.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24694,"byte_end":24707,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"from_read_ref","qualname":"<Deserializer<ReadRefReader>>::from_read_ref","value":"fn (rd: &'de R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Deserializer` from the given byte slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24939,"byte_end":24946,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Deserializer<ReadRefReader>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":25106,"byte_end":25119,"line_start":215,"line_end":215,"column_start":12,"column_end":25},"name":"set_max_depth","qualname":"<Deserializer<R>>::set_max_depth","value":"fn (&mut self, depth: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the maximum nesting depth that is allowed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44194,"byte_end":44202,"line_start":775,"line_end":775,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::decode::Reference::Borrowed","value":"Reference::Borrowed(&'b T)","parent":{"krate":0,"index":994},"children":[],"decl_id":null,"docs":" The reference is pointed at data that was borrowed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44273,"byte_end":44279,"line_start":777,"line_end":777,"column_start":5,"column_end":11},"name":"Copied","qualname":"::decode::Reference::Copied","value":"Reference::Copied(&'c T)","parent":{"krate":0,"index":994},"children":[],"decl_id":null,"docs":" The reference is pointed at data that was copied.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44089,"byte_end":44098,"line_start":773,"line_end":773,"column_start":10,"column_end":19},"name":"Reference","qualname":"::decode::Reference","value":"Reference::{Borrowed, Copied}","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":1001}],"decl_id":null,"docs":" Unification of both borrowed and non-borrowed reference types.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44427,"byte_end":44436,"line_start":783,"line_end":783,"column_start":11,"column_end":20},"name":"ReadSlice","qualname":"::decode::ReadSlice","value":"ReadSlice<'de>: Read","parent":null,"children":[{"krate":0,"index":325}],"decl_id":null,"docs":" Extends the `Read` trait by allowing to read slices directly by borrowing bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44529,"byte_end":44539,"line_start":785,"line_end":785,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::decode::ReadSlice::read_slice","value":"fn <'a> (&'a mut self, len: usize) -> Result<Reference<'de, 'a, [u8]>, io::Error>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes from the underlying byte-array.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44675,"byte_end":44685,"line_start":790,"line_end":790,"column_start":12,"column_end":22},"name":"ReadReader","qualname":"::decode::ReadReader","value":"ReadReader {  }","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"decl_id":null,"docs":" Owned reader wrapper.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45513,"byte_end":45526,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"ReadRefReader","qualname":"::decode::ReadRefReader","value":"ReadRefReader {  }","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"decl_id":null,"docs":" Borrowed reader wrapper.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":47277,"byte_end":47286,"line_start":884,"line_end":884,"column_start":8,"column_end":17},"name":"from_read","qualname":"::decode::from_read","value":"fn <R, T> (rd: R) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an instance of type `T` from an I/O stream of MessagePack.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":47570,"byte_end":47580,"line_start":895,"line_end":895,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::decode::from_slice","value":"fn <'a, T> (input: &'a [u8]) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into the desired type.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":48682,"byte_end":48695,"line_start":930,"line_end":930,"column_start":8,"column_end":21},"name":"from_read_ref","qualname":"::decode::from_read_ref","value":"fn <'a, R, T> (rd: &'a R) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an instance of type `T` from a reference I/O reader of MessagePack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":48665,"byte_end":48674,"line_start":929,"line_end":929,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":388},{"krate":0,"index":1044},{"krate":0,"index":1058},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":1060},{"krate":0,"index":1066},{"krate":0,"index":404},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":425},{"krate":0,"index":432},{"krate":0,"index":1070},{"krate":0,"index":1075},{"krate":0,"index":1080},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1095},{"krate":0,"index":439},{"krate":0,"index":448},{"krate":0,"index":457},{"krate":0,"index":466},{"krate":0,"index":475},{"krate":0,"index":486},{"krate":0,"index":495},{"krate":0,"index":504},{"krate":0,"index":552},{"krate":0,"index":596},{"krate":0,"index":639},{"krate":0,"index":647},{"krate":0,"index":653},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":667}],"decl_id":null,"docs":" Serialize a Rust data structure into MessagePack data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":49648,"byte_end":49665,"line_start":26,"line_end":26,"column_start":5,"column_end":22},"name":"InvalidValueWrite","qualname":"::encode::Error::InvalidValueWrite","value":"Error::InvalidValueWrite(ValueWriteError)","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":" Failed to write a MessagePack value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":49772,"byte_end":49785,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"UnknownLength","qualname":"::encode::Error::UnknownLength","value":"Error::UnknownLength","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":" Failed to serialize struct, sequence or map, because its length is unknown.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":49868,"byte_end":49884,"line_start":30,"line_end":30,"column_start":5,"column_end":21},"name":"InvalidDataModel","qualname":"::encode::Error::InvalidDataModel","value":"Error::InvalidDataModel(&'static str)","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":" Invalid Data model, i.e. Serialize trait is not implmented correctly\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":49933,"byte_end":49951,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"name":"DepthLimitExceeded","qualname":"::encode::Error::DepthLimitExceeded","value":"Error::DepthLimitExceeded","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":" Depth limit exceeded\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":50001,"byte_end":50007,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::encode::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":" Catchall for syntax error messages.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":49591,"byte_end":49596,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::Error","value":"Error::{InvalidValueWrite, UnknownLength, InvalidDataModel, DepthLimitExceeded, Syntax}","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1055}],"decl_id":null,"docs":" This type represents all possible errors that can occur when serializing or\n deserializing MessagePack data.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51828,"byte_end":51843,"line_start":89,"line_end":89,"column_start":11,"column_end":26},"name":"UnderlyingWrite","qualname":"::encode::UnderlyingWrite","value":"UnderlyingWrite","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" Obtain the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51887,"byte_end":51892,"line_start":91,"line_end":91,"column_start":10,"column_end":15},"name":"Write","qualname":"::encode::UnderlyingWrite::Write","value":"type Write: Write;","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Underlying writer type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51960,"byte_end":51967,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"get_ref","qualname":"::encode::UnderlyingWrite::get_ref","value":"fn (&self) -> &Self::Write","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":52137,"byte_end":52144,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::encode::UnderlyingWrite::get_mut","value":"fn (&mut self) -> &mut Self::Write","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":52253,"byte_end":52263,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::encode::UnderlyingWrite::into_inner","value":"fn (self) -> Self::Write","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Unwraps this `Serializer`, returning the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":52925,"byte_end":52935,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::encode::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" Represents MessagePack serialization implementation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53107,"byte_end":53114,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Serializer<W, C>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53302,"byte_end":53309,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Serializer<W, C>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53440,"byte_end":53450,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Serializer<W, C>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Serializer`, returning the underlying writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53610,"byte_end":53623,"line_start":149,"line_end":149,"column_start":12,"column_end":25},"name":"set_max_depth","qualname":"<Serializer<W, C>>::set_max_depth","value":"fn (&mut self, depth: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the maximum nesting depth that is allowed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54041,"byte_end":54044,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, DefaultConfig>>::new","value":"fn (wr: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `MessagePack` serializer whose output will be written to the writer\n specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54331,"byte_end":54338,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"compact","qualname":"<Serializer<W, StructTupleConfig<DefaultConfig>>>::compact","value":"fn (wr: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use `Serializer::new` instead\")","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54247,"byte_end":54300,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54578,"byte_end":54587,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"new_named","qualname":"<Serializer<W, StructMapConfig<DefaultConfig>>>::new_named","value":"fn (wr: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use `Serializer::with_struct_map()` instead\")","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54480,"byte_end":54547,"line_start":180,"line_end":180,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":55117,"byte_end":55132,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"with_struct_map","qualname":"<Serializer<W, C>>::with_struct_map","value":"fn (self) -> Serializer<W, StructMapConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize structs as a map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":55613,"byte_end":55630,"line_start":214,"line_end":214,"column_start":12,"column_end":29},"name":"with_struct_tuple","qualname":"<Serializer<W, C>>::with_struct_tuple","value":"fn (self) -> Serializer<W, StructTupleConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize structs as a tuple\n without field names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":56094,"byte_end":56114,"line_start":227,"line_end":227,"column_start":12,"column_end":32},"name":"with_string_variants","qualname":"<Serializer<W, C>>::with_string_variants","value":"fn (self) -> Serializer<W, VariantStringConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize enum variants as strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":56605,"byte_end":56626,"line_start":241,"line_end":241,"column_start":12,"column_end":33},"name":"with_integer_variants","qualname":"<Serializer<W, C>>::with_integer_variants","value":"fn (self) -> Serializer<W, VariantIntegerConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize enum variants as a their\n integer indices.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57209,"byte_end":57217,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"Compound","qualname":"::encode::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":1074}],"decl_id":null,"docs":" Part of serde serialization API.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57326,"byte_end":57344,"line_start":275,"line_end":275,"column_start":12,"column_end":30},"name":"ExtFieldSerializer","qualname":"::encode::ExtFieldSerializer","value":"ExtFieldSerializer {  }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57292,"byte_end":57314,"line_start":274,"line_end":274,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57507,"byte_end":57520,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"ExtSerializer","qualname":"::encode::ExtSerializer","value":"ExtSerializer {  }","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094}],"decl_id":null,"docs":" Represents MessagePack serialization implementation for Ext.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80111,"byte_end":80116,"line_start":951,"line_end":951,"column_start":8,"column_end":13},"name":"write","qualname":"::encode::write","value":"fn <W, T> (wr: &mut W, val: &T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as MessagePack into the I/O stream.\n This function uses compact representation - structures as arrays","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80094,"byte_end":80103,"line_start":950,"line_end":950,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80496,"byte_end":80507,"line_start":964,"line_end":964,"column_start":8,"column_end":19},"name":"write_named","qualname":"::encode::write_named","value":"fn <W, T> (wr: &mut W, val: &T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as MessagePack into the I/O stream.\n This function serializes structures as maps","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80479,"byte_end":80488,"line_start":963,"line_end":963,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80959,"byte_end":80965,"line_start":979,"line_end":979,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::encode::to_vec","value":"fn <T> (val: &T) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a MessagePack byte vector.\n This method uses compact representation, structs are serialized as arrays","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":80942,"byte_end":80951,"line_start":978,"line_end":978,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":81356,"byte_end":81368,"line_start":995,"line_end":995,"column_start":8,"column_end":20},"name":"to_vec_named","qualname":"::encode::to_vec_named","value":"fn <T> (val: &T) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializes data structure into byte vector as a map\n Resulting MessagePack message will contain field names","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":81339,"byte_end":81348,"line_start":994,"line_end":994,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2603,"byte_end":2626,"line_start":91,"line_end":91,"column_start":11,"column_end":34},"name":"MSGPACK_EXT_STRUCT_NAME","qualname":"::MSGPACK_EXT_STRUCT_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Name of Serde newtype struct to Represent Msgpack's Ext\n Msgpack Ext: Ext(tag, binary)\n Serde data model: _ExtStruct((tag, binary))\n Example Serde impl for custom type:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2910,"byte_end":2913,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"Raw","qualname":"::Raw","value":"Raw {  }","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":" Helper that allows both to encode and decode strings no matter whether they contain valid or\n invalid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":3040,"byte_end":3043,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Raw>::new","value":"fn (v: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Raw` from the UTF-8 string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":3156,"byte_end":3165,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Raw>::from_utf8","value":"fn (v: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to a `Raw`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":3510,"byte_end":3516,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Raw>::is_str","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw is valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":3642,"byte_end":3648,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"is_err","qualname":"<Raw>::is_err","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw contains invalid UTF-8 sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":3788,"byte_end":3794,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Raw>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the string reference if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4054,"byte_end":4060,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"as_err","qualname":"<Raw>::as_err","value":"fn (&self) -> Option<&Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or\n else `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4269,"byte_end":4277,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Raw>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte slice of this raw's contents.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4519,"byte_end":4527,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"into_str","qualname":"<Raw>::into_str","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this object, yielding the string if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4637,"byte_end":4647,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Raw>::into_bytes","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Raw` into a byte vector.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6664,"byte_end":6670,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"RawRef","qualname":"::RawRef","value":"RawRef {  }","parent":null,"children":[{"krate":0,"index":1111}],"decl_id":null,"docs":" Helper that allows both to encode and decode strings no matter whether they contain valid or\n invalid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6817,"byte_end":6820,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<RawRef>::new","value":"fn (v: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `RawRef` from the UTF-8 string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6937,"byte_end":6946,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<RawRef>::from_utf8","value":"fn (v: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to a `RawRef`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":7237,"byte_end":7243,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"is_str","qualname":"<RawRef>::is_str","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw is valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":7369,"byte_end":7375,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"is_err","qualname":"<RawRef>::is_err","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw contains invalid UTF-8 sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":7515,"byte_end":7521,"line_start":280,"line_end":280,"column_start":12,"column_end":18},"name":"as_str","qualname":"<RawRef>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the string reference if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":7772,"byte_end":7778,"line_start":289,"line_end":289,"column_start":12,"column_end":18},"name":"as_err","qualname":"<RawRef>::as_err","value":"fn (&self) -> Option<&Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or\n else `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":7987,"byte_end":7995,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<RawRef>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte slice of this raw's contents.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":9832,"byte_end":9833,"line_start":13,"line_end":13,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":11390,"byte_end":11403,"line_start":57,"line_end":57,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12717,"byte_end":12732,"line_start":100,"line_end":100,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12959,"byte_end":12974,"line_start":107,"line_end":107,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14088,"byte_end":14105,"line_start":149,"line_end":149,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14336,"byte_end":14353,"line_start":156,"line_end":156,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15581,"byte_end":15600,"line_start":199,"line_end":199,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15835,"byte_end":15854,"line_start":206,"line_end":206,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":16889,"byte_end":16909,"line_start":244,"line_end":244,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":17146,"byte_end":17166,"line_start":251,"line_end":251,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19578,"byte_end":19583,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":20210,"byte_end":20215,"line_start":66,"line_end":66,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":20327,"byte_end":20332,"line_start":72,"line_end":72,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21422,"byte_end":21427,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21606,"byte_end":21611,"line_start":102,"line_end":102,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21722,"byte_end":21727,"line_start":108,"line_end":108,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":22093,"byte_end":22098,"line_start":118,"line_end":118,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":22548,"byte_end":22553,"line_start":129,"line_end":129,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23424,"byte_end":23436,"line_start":154,"line_end":154,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24320,"byte_end":24332,"line_start":187,"line_end":187,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24536,"byte_end":24548,"line_start":194,"line_end":194,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":25019,"byte_end":25031,"line_start":213,"line_end":213,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28106,"byte_end":28121,"line_start":309,"line_end":309,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28389,"byte_end":28404,"line_start":319,"line_end":319,"column_start":65,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28908,"byte_end":28923,"line_start":336,"line_end":336,"column_start":62,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41096,"byte_end":41105,"line_start":654,"line_end":654,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41316,"byte_end":41325,"line_start":663,"line_end":663,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41829,"byte_end":41838,"line_start":687,"line_end":687,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42049,"byte_end":42058,"line_start":696,"line_end":696,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42720,"byte_end":42733,"line_start":725,"line_end":725,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42913,"byte_end":42926,"line_start":733,"line_end":733,"column_start":58,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":43230,"byte_end":43243,"line_start":744,"line_end":744,"column_start":61,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44743,"byte_end":44753,"line_start":795,"line_end":795,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44923,"byte_end":44933,"line_start":804,"line_end":804,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45211,"byte_end":45221,"line_start":814,"line_end":814,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45615,"byte_end":45628,"line_start":833,"line_end":833,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45792,"byte_end":45805,"line_start":842,"line_end":842,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":46114,"byte_end":46127,"line_start":854,"line_end":854,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":50042,"byte_end":50047,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":50863,"byte_end":50868,"line_start":61,"line_end":61,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51486,"byte_end":51491,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51613,"byte_end":51618,"line_start":81,"line_end":81,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53026,"byte_end":53036,"line_start":127,"line_end":127,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53703,"byte_end":53713,"line_start":154,"line_end":154,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54193,"byte_end":54203,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54428,"byte_end":54438,"line_start":179,"line_end":179,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54687,"byte_end":54697,"line_start":187,"line_end":187,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54869,"byte_end":54879,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":56898,"byte_end":56908,"line_start":251,"line_end":251,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57662,"byte_end":57670,"line_start":288,"line_end":288,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58011,"byte_end":58019,"line_start":301,"line_end":301,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58366,"byte_end":58374,"line_start":314,"line_end":314,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58720,"byte_end":58728,"line_start":327,"line_end":327,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59065,"byte_end":59073,"line_start":340,"line_end":340,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59550,"byte_end":59558,"line_start":357,"line_end":357,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59954,"byte_end":59962,"line_start":372,"line_end":372,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":79028,"byte_end":79041,"line_start":911,"line_end":911,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":79469,"byte_end":79487,"line_start":928,"line_end":928,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2969,"byte_end":2972,"line_start":102,"line_end":102,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4796,"byte_end":4799,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":5143,"byte_end":5153,"line_start":186,"line_end":186,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6230,"byte_end":6233,"line_start":233,"line_end":233,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6736,"byte_end":6742,"line_start":251,"line_end":251,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":8158,"byte_end":8164,"line_start":305,"line_end":305,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":8509,"byte_end":8522,"line_start":321,"line_end":321,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":9145,"byte_end":9151,"line_start":348,"line_end":348,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2090,"byte_end":2096,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2106,"byte_end":2112,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2122,"byte_end":2128,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":363}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":9756,"byte_end":9772,"line_start":11,"line_end":11,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":43},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":9832,"byte_end":9833,"line_start":13,"line_end":13,"column_start":56,"column_end":57},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":35},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":11390,"byte_end":11403,"line_start":57,"line_end":57,"column_start":35,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":728},"to":{"krate":0,"index":43}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12717,"byte_end":12732,"line_start":100,"line_end":100,"column_start":9,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":12959,"byte_end":12974,"line_start":107,"line_end":107,"column_start":38,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":735},"to":{"krate":0,"index":43}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14088,"byte_end":14105,"line_start":149,"line_end":149,"column_start":9,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":14336,"byte_end":14353,"line_start":156,"line_end":156,"column_start":38,"column_end":55},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":747},"to":{"krate":0,"index":43}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15581,"byte_end":15600,"line_start":199,"line_end":199,"column_start":9,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":15835,"byte_end":15854,"line_start":206,"line_end":206,"column_start":38,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":759},"to":{"krate":0,"index":43}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":16889,"byte_end":16909,"line_start":244,"line_end":244,"column_start":9,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\config.rs","byte_start":17146,"byte_end":17166,"line_start":251,"line_end":251,"column_start":38,"column_end":58},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":771},"to":{"krate":0,"index":43}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":19578,"byte_end":19583,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":783},"to":{"krate":1,"index":1592}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":20210,"byte_end":20215,"line_start":66,"line_end":66,"column_start":20,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":783},"to":{"krate":14,"index":8090}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":20327,"byte_end":20332,"line_start":72,"line_end":72,"column_start":18,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21422,"byte_end":21427,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21606,"byte_end":21611,"line_start":102,"line_end":102,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":21722,"byte_end":21727,"line_start":108,"line_end":108,"column_start":31,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":22093,"byte_end":22098,"line_start":118,"line_end":118,"column_start":34,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":22548,"byte_end":22553,"line_start":129,"line_end":129,"column_start":42,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":23424,"byte_end":23436,"line_start":154,"line_end":154,"column_start":15,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24320,"byte_end":24332,"line_start":187,"line_end":187,"column_start":22,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":24536,"byte_end":24548,"line_start":194,"line_end":194,"column_start":14,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":25019,"byte_end":25031,"line_start":213,"line_end":213,"column_start":30,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28106,"byte_end":28121,"line_start":309,"line_end":309,"column_start":39,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28389,"byte_end":28404,"line_start":319,"line_end":319,"column_start":65,"column_end":80},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":828},"to":{"krate":14,"index":1214}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":28908,"byte_end":28923,"line_start":336,"line_end":336,"column_start":62,"column_end":77},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":828},"to":{"krate":14,"index":1332}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41096,"byte_end":41105,"line_start":654,"line_end":654,"column_start":17,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41316,"byte_end":41325,"line_start":663,"line_end":663,"column_start":62,"column_end":71},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":259},"to":{"krate":14,"index":1332}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":41829,"byte_end":41838,"line_start":687,"line_end":687,"column_start":17,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42049,"byte_end":42058,"line_start":696,"line_end":696,"column_start":62,"column_end":71},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":276},"to":{"krate":14,"index":1350}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42720,"byte_end":42733,"line_start":725,"line_end":725,"column_start":17,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":42913,"byte_end":42926,"line_start":733,"line_end":733,"column_start":58,"column_end":71},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":295},"to":{"krate":14,"index":1388}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":43230,"byte_end":43243,"line_start":744,"line_end":744,"column_start":61,"column_end":74},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":295},"to":{"krate":14,"index":1396}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44443,"byte_end":44447,"line_start":783,"line_end":783,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2825},"to":{"krate":0,"index":323}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44743,"byte_end":44753,"line_start":795,"line_end":795,"column_start":15,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":44923,"byte_end":44933,"line_start":804,"line_end":804,"column_start":39,"column_end":49},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":323}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45211,"byte_end":45221,"line_start":814,"line_end":814,"column_start":24,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1028},"to":{"krate":1,"index":2825}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45615,"byte_end":45628,"line_start":833,"line_end":833,"column_start":35,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":45792,"byte_end":45805,"line_start":842,"line_end":842,"column_start":44,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1035},"to":{"krate":1,"index":2825}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\decode.rs","byte_start":46114,"byte_end":46127,"line_start":854,"line_end":854,"column_start":55,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":323}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":50042,"byte_end":50047,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":1592}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":50863,"byte_end":50868,"line_start":61,"line_end":61,"column_start":18,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51486,"byte_end":51491,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":51613,"byte_end":51618,"line_start":81,"line_end":81,"column_start":28,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1044},"to":{"krate":14,"index":8704}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53026,"byte_end":53036,"line_start":127,"line_end":127,"column_start":19,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":53703,"byte_end":53713,"line_start":154,"line_end":154,"column_start":16,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54193,"byte_end":54203,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54428,"byte_end":54438,"line_start":179,"line_end":179,"column_start":16,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54687,"byte_end":54697,"line_start":187,"line_end":187,"column_start":28,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":54869,"byte_end":54879,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":56898,"byte_end":56908,"line_start":251,"line_end":251,"column_start":39,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1060},"to":{"krate":0,"index":399}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":57662,"byte_end":57670,"line_start":288,"line_end":288,"column_start":63,"column_end":71},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1733}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58011,"byte_end":58019,"line_start":301,"line_end":301,"column_start":65,"column_end":73},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1739}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58366,"byte_end":58374,"line_start":314,"line_end":314,"column_start":71,"column_end":79},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1745}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":58720,"byte_end":58728,"line_start":327,"line_end":327,"column_start":72,"column_end":80},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1751}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59065,"byte_end":59073,"line_start":340,"line_end":340,"column_start":63,"column_end":71},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1757}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59550,"byte_end":59558,"line_start":357,"line_end":357,"column_start":66,"column_end":74},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1768}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":59954,"byte_end":59962,"line_start":372,"line_end":372,"column_start":73,"column_end":81},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1070},"to":{"krate":14,"index":1775}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":79028,"byte_end":79041,"line_start":911,"line_end":911,"column_start":25,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\encode.rs","byte_start":79469,"byte_end":79487,"line_start":928,"line_end":928,"column_start":25,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":2969,"byte_end":2972,"line_start":102,"line_end":102,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":4796,"byte_end":4799,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1099},"to":{"krate":14,"index":1680}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":5143,"byte_end":5153,"line_start":186,"line_end":186,"column_start":32,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":683},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6230,"byte_end":6233,"line_start":233,"line_end":233,"column_start":32,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1099},"to":{"krate":14,"index":1192}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":6736,"byte_end":6742,"line_start":251,"line_end":251,"column_start":10,"column_end":16},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":8158,"byte_end":8164,"line_start":305,"line_end":305,"column_start":24,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1109},"to":{"krate":14,"index":1680}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":8509,"byte_end":8522,"line_start":321,"line_end":321,"column_start":32,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":714},"to":{"krate":14,"index":1276}},{"span":{"file_name":"C:\\Users\\Beni\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rmp-serde-0.14.3\\src\\lib.rs","byte_start":9145,"byte_end":9151,"line_start":348,"line_end":348,"column_start":32,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1109},"to":{"krate":14,"index":1192}}]}